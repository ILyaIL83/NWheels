#if false

using System;
using NWheels.Api;
using NWheels.Api.Ddd;

namespace MyHRApp
{
	[DomainModel.Entity(IsAggregateRoot = true)]
    public class Department
    {
        [DomainModel.EntityId(AutoGenerated = true)]
        public virtual int Id { get; protected set; }

		//-------------------------------------------------------------------------------------------------------------
		
        [DomainModel.Invariant.Required, DomainModel.Invariant.Unique, DomainModel.PersistedValue]
        public virtual string Name { get; set; }

		//-------------------------------------------------------------------------------------------------------------

        [DomainModel.Invariant.Required, DomainModel.PersistedValue]
        public virtual Employee.Reference Manager { get; set; }

		//-------------------------------------------------------------------------------------------------------------
		
        [DomainModel.Invariant]
		protected virtual bool ManagerBelongsToDepartment()
		{
			return (Manager.Instance.Department.Id == this.Id);
		}
		
		//-------------------------------------------------------------------------------------------------------------
		
        public class Reference : EntityReference<Department, int> { }
    }

	//------------------------------------------------------------------------------------------------------------------
	
	[DomainModel.Entity(IsAggregateRoot = true)]
    public class Employee
    {
        [DomainModel.EntityId]
        public virtual string Id { get; protected set; }

		//-------------------------------------------------------------------------------------------------------------
		
        [DomainModel.Invariant.Required, DomainModel.Relation.AggregationParent, DomainModel.PersistedValue]
        public virtual Department.Reference Department { get; set; }

		//-------------------------------------------------------------------------------------------------------------
		
        [DomainModel.Invariant.Required, DomainModel.PersistedValue, DomainModel.EntityText]
        public virtual PersonName Name { get; set; }

		//-------------------------------------------------------------------------------------------------------------
		
		[DomainModel.Invariant.Required, DomainModel.PersistedValue]
        public virtual PostalAddress Address { get; set; }

		//-------------------------------------------------------------------------------------------------------------
		
		[DomainModel.Invariant.Required, DomainModel.PersistedValue]
        public virtual PhoneNumber Phone { get; set; }

		//-------------------------------------------------------------------------------------------------------------
		
		[DomainModel.Invariant.Required, DomainModel.PersistedValue]
        public virtual EmailAddress Email { get; set; }

		//-------------------------------------------------------------------------------------------------------------
		
        public class Reference : EntityReference<Employee, string> { }
    }
}

#endif