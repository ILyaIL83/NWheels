using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using NWheels.DataObjects;
using NWheels.Entities;
using NWheels.Processing.Core;

namespace NWheels.Processing
{
    [EntityContract]
    public interface IWorkflowInstanceEntity
    {
        Guid WorkflowInstanceId { get; set; }

        //-----------------------------------------------------------------------------------------------------------------------------------------------------

        Guid CorrelationId { get; set; }

        //-----------------------------------------------------------------------------------------------------------------------------------------------------

        WorkflowState WorkflowState { get; set; }

        //-----------------------------------------------------------------------------------------------------------------------------------------------------

        DateTime CreatedAtUtc { get; set; }

        //-----------------------------------------------------------------------------------------------------------------------------------------------------

        DateTime UpdatedAtUtc { get; set; }

        //-----------------------------------------------------------------------------------------------------------------------------------------------------

        DateTime TimeoutAtUtc { get; set; }

        //-----------------------------------------------------------------------------------------------------------------------------------------------------

        //[PropertyContract.Required, PropertyContract.Semantic.(512)]
        Type CodeBehindClrType { get; set; }

        //-----------------------------------------------------------------------------------------------------------------------------------------------------

        byte[] ProcessorSnapshot { get; set; }

        //-----------------------------------------------------------------------------------------------------------------------------------------------------

        TimeSpan TotalTime { get; set; }

        //-----------------------------------------------------------------------------------------------------------------------------------------------------

        TimeSpan TotalExecutionTime { get; set; }

        //-----------------------------------------------------------------------------------------------------------------------------------------------------

        TimeSpan TotalSuspensionTime { get; set; }

        //-----------------------------------------------------------------------------------------------------------------------------------------------------

        int TotalSuspensionCount { get; set; }
    }

    //---------------------------------------------------------------------------------------------------------------------------------------------------------

    [EntityContract]
    public interface IStateMachineInstanceEntity<TState> : IWorkflowInstanceEntity
    {
        [PropertyContract.Required]
        TState MachineState { get; set; }
    }
}
