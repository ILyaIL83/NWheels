<<Grammar Name="GrammarUnderTest" encoding_class="ascii">>

	S: [ \t]+ ;
	EOL: [\r\n]+ ;
	NOT_EOL: ![\r\n] ;
	SKIP_TO_EOL: (NOT_EOL.)* EOL ;
	INDENT: [ \t]+ ;
	EOF: !. ;
	QUOTE: '"' ;
	NOT_QUOTE: !'"' ;
	COMMA: S? ',' S? ;

	[1] ^^solution: @(header_line+) @(project+) @global ;
	
	[2] ^^header_line: !'Project(' SKIP_TO_EOL ; 
	
	[3] ^^project: project_header project_section* 'EndProject' EOL ; 
	[4] ^^project_section: INDENT? 'ProjectSection' SKIP_TO_EOL project_section_line* INDENT? 'EndProjectSection' EOL ;
	[5] ^^project_section_line: INDENT? !'EndProjectSection' SKIP_TO_EOL ;
	
	[6] ^^global: 'Global' EOL global_section* 'EndGlobal' EOL @EOF ;
	[7] ^^global_section: global_section_header global_section_line* INDENT? 'EndGlobalSection' EOL ;
	[8] ^^global_section_header:
			INDENT? 'GlobalSection(' global_section_id ')' S? '=' S? pre_post_solution EOL ;
	[9] ^pre_post_solution: pre_solution / post_solution ;
	[10] ^^pre_solution: 'preSolution' ;
	[11] ^^post_solution: 'postSolution' ;
	[12] ^^global_section_line: lhs_rhs_guid_line / lhs_guid_line / (INDENT? !'EndGlobalSection' SKIP_TO_EOL) ;
	[13] ^^global_section_id: [A-Za-z0-9_]+ ;

	[14] ^^lhs_guid_line: INDENT? guid '.' lhs_guid_line_rhs ;
	[15] ^^lhs_guid_line_rhs: SKIP_TO_EOL ; 

	[16] ^^lhs_rhs_guid_line: INDENT? guid S? '=' S? guid EOL ;

	[18] ^^guid: '{' [A-Fa-f0-9-]{36,36} '}' ;
	[19] ^quoted_string: QUOTE string QUOTE ;

	[20] ^^string: (NOT_QUOTE.)* ;
	[21] ^quoted_guid: QUOTE guid QUOTE ;

	[22] ^^project_header: 
		'Project(' quoted_guid ')' S? '=' S? quoted_string COMMA quoted_string COMMA quoted_guid S? EOL ;

<</Grammar>>
